{{- $context := merge (dict "component" "webapp") . -}}
{{- $fullUrlHost := printf "%s:%d" (required "The urlHost config value is required! " .Values.urlHost | toString | trim) (required "The service.httpsPort config value is required!" .Values.service.httpsPort | int) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ssc.fullcomponentname" $context }}
  labels:
    {{- include "ssc.labels" $context | nindent 4 }}
spec:
  serviceName: "webapp"
  replicas: 1
  selector:
    matchLabels:
      {{- include "ssc.selector" $context | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ssc.selector" $context | nindent 8 }}
    spec:
      containers:
        - name: webapp
          ports:
            - name: fortify.ossim.io
              containerPort: 8080
              protocol: TCP
            - name: fortify.ossim.io
              containerPort: 8443
              protocol: TCP
          env:
            - name: HOST_URL
              value: "https://{{ $fullUrlHost }}/"
            - name: CATALINA_OPTS
              value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage={{ required "The jvmMaxRAMPercentage config value is required!" .Values.jvmMaxRAMPercentage | int }}.0"
          {{- with .Values.jdbcDriverUri }}
            - name: JDBC_DRIVER_URI
              value: "{{ . | toString | trim }}"
          {{- end }}
            - name: HTTP_SERVER_CERTIFICATE_VERIFICATION
              value: "{{ required "The httpClientCertificateVerification config value is required!" .Values.httpClientCertificateVerification | toString | trim }}"
          {{- with .Values.secretRef }}
            {{- if .keys.sscAutoconfigEntry }}
            - name: COM_FORTIFY_SSC_LICENSEPATH
              value: "/app/secrets/{{ required "The secretRef.keys.sscLicenseEntry config value is required!" .keys.sscLicenseEntry | toString | trim }}"
            - name: COM_FORTIFY_SSC_AUTOCONFIGPATH
              value: "/app/secrets/{{ required "The secretRef.keys.sscAutoconfigEntry config value is required!" .keys.sscAutoconfigEntry | toString | trim }}"
            {{- end }}
            {{- with .keys.sscSecretKeyEntry }}
            - name: COM_FORTIFY_SSC_SECRET_KEY
              value: "/app/secrets/{{ required "The secretRef.keys.sscSecretKeyEntry config value is required!" . | toString | trim }}"
            {{- end }}
            - name: HTTP_SERVER_CERTIFICATE_KEYSTORE_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.httpCertificateKeystoreFileEntry config value is required!" .keys.httpCertificateKeystoreFileEntry | toString | trim }}"
            - name: HTTP_SERVER_CERTIFICATE_KEYSTORE_PASSWORD_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.httpCertificateKeystorePasswordEntry config value is required!" .keys.httpCertificateKeystorePasswordEntry | toString | trim }}"
            - name: HTTP_SERVER_CERTIFICATE_KEY_PASSWORD_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.httpCertificateKeyPasswordEntry config value is required!" .keys.httpCertificateKeyPasswordEntry | toString | trim }}"
            {{- if .keys.httpTruststoreFileEntry }}
            - name: HTTP_SERVER_TRUSTSTORE_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.httpTruststoreFileEntry config value is required!" .keys.httpTruststoreFileEntry | toString | trim }}"
            - name: HTTP_SERVER_TRUSTSTORE_PASSWORD_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.httpTruststorePasswordEntry config value is required!" .keys.httpTruststorePasswordEntry | toString | trim }}"
            {{- end }}
            {{- if .keys.jvmTruststoreFileEntry }}
            - name: JVM_TRUSTSTORE_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.jvmTruststoreFileEntry config value is required!" .keys.jvmTruststoreFileEntry | toString | trim }}"
            - name: JVM_TRUSTSTORE_PASSWORD_FILE
              value: "/app/secrets/{{ required "The secretRef.keys.jmvTruststorePasswordEntry config value is required!" .keys.jmvTruststorePasswordEntry | toString | trim }}"
            {{- end }}
          {{- end }}
          {{- with .Values.environment }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          image: "{{ .Values.image.repositoryPrefix }}ssc-webapp:{{ include "ssc.image.tag" $context }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: "/app/secrets"
            - name: persistent-volume
              mountPath: "/fortify"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: secrets-volume
          secret:
            secretName: {{ required "The secretRef.name config value is required!" .Values.secretRef.name }}
        - name: persistent-volume
          persistentVolumeClaim:
            claimName: {{ include "ssc.fullcomponentname" (merge (dict "component" "pvc") . ) }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 -}}
    {{- end }}
